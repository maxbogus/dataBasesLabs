-- This script was generated by the ERD tool in pgAdmin 4.
-- Please log an issue at https://github.com/pgadmin-org/pgadmin4/issues/new/choose if you find any bugs, including reproduction steps.
BEGIN;


CREATE TABLE IF NOT EXISTS public.answers
(
    id integer NOT NULL,
    answer text COLLATE pg_catalog."default",
    CONSTRAINT answers_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.categories
(
    id integer NOT NULL,
    CONSTRAINT categories_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.colors
(
    id integer NOT NULL,
    name text COLLATE pg_catalog."default",
    CONSTRAINT colors_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.email
(
    id integer NOT NULL,
    email text COLLATE pg_catalog."default",
    CONSTRAINT email_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public."fullName"
(
    id integer NOT NULL,
    "fullName" text COLLATE pg_catalog."default",
    CONSTRAINT "fullName_pkey" PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public."goodCategories"
(
    id integer NOT NULL,
    good integer,
    "subCategory" integer,
    CONSTRAINT "goodCategories_pkey" PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.goods
(
    id integer NOT NULL,
    description text COLLATE pg_catalog."default",
    articul text COLLATE pg_catalog."default",
    color integer,
    size integer,
    photo integer,
    weight integer,
    review integer,
    CONSTRAINT goods_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.multiples
(
    id integer NOT NULL,
    name text COLLATE pg_catalog."default",
    CONSTRAINT multiples_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public."phoneNumbers"
(
    id integer NOT NULL,
    "phoneNumber" text COLLATE pg_catalog."default",
    verfied boolean,
    CONSTRAINT "phoneNumbers_pkey" PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.photos
(
    id integer NOT NULL,
    url text COLLATE pg_catalog."default",
    description text COLLATE pg_catalog."default",
    CONSTRAINT photos_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.questions
(
    id integer NOT NULL,
    "fullName" integer,
    email integer,
    question text COLLATE pg_catalog."default",
    answer integer,
    CONSTRAINT questions_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public."questionsGoods"
(
    id integer NOT NULL,
    question integer,
    good integer,
    CONSTRAINT "questionsGoods_pkey" PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public."reviewScores"
(
    id integer NOT NULL,
    "isValuable" boolean,
    review integer,
    CONSTRAINT "reviewScores_pkey" PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public."reviewType"
(
    id integer NOT NULL,
    type character varying COLLATE pg_catalog."default",
    CONSTRAINT "reviewType_pkey" PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.reviews
(
    id integer NOT NULL,
    good integer,
    score integer,
    comment text COLLATE pg_catalog."default",
    phone integer,
    CONSTRAINT reviews_pkey1 PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.sizes
(
    id integer NOT NULL,
    size text COLLATE pg_catalog."default",
    CONSTRAINT sizes_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public."subCategories"
(
    id integer NOT NULL,
    CONSTRAINT "subCategories_pkey" PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public."videoReviews"
(
    id integer NOT NULL,
    url text COLLATE pg_catalog."default",
    description text COLLATE pg_catalog."default",
    type integer,
    CONSTRAINT reviews_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.weights
(
    id integer NOT NULL,
    quantity integer,
    multiples integer,
    CONSTRAINT weights_pkey PRIMARY KEY (id)
);

ALTER TABLE IF EXISTS public."goodCategories"
    ADD CONSTRAINT "goodId" FOREIGN KEY (good)
    REFERENCES public.goods (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public."goodCategories"
    ADD CONSTRAINT "subCategoryId" FOREIGN KEY ("subCategory")
    REFERENCES public."subCategories" (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;
CREATE INDEX IF NOT EXISTS "fki_subCategoryId"
    ON public."goodCategories"("subCategory");


ALTER TABLE IF EXISTS public.goods
    ADD CONSTRAINT "colorId" FOREIGN KEY (color)
    REFERENCES public.colors (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;
CREATE INDEX IF NOT EXISTS "fki_colorId"
    ON public.goods(color);


ALTER TABLE IF EXISTS public.goods
    ADD CONSTRAINT "photoId" FOREIGN KEY (photo)
    REFERENCES public.photos (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;
CREATE INDEX IF NOT EXISTS "fki_photoId"
    ON public.goods(photo);


ALTER TABLE IF EXISTS public.goods
    ADD CONSTRAINT "reviewId" FOREIGN KEY (review)
    REFERENCES public."videoReviews" (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;
CREATE INDEX IF NOT EXISTS "fki_reviewId"
    ON public.goods(review);


ALTER TABLE IF EXISTS public.goods
    ADD CONSTRAINT "sizeId" FOREIGN KEY (size)
    REFERENCES public.sizes (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;
CREATE INDEX IF NOT EXISTS "fki_sizeId"
    ON public.goods(size);


ALTER TABLE IF EXISTS public.goods
    ADD CONSTRAINT "weightId" FOREIGN KEY (weight)
    REFERENCES public.weights (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;
CREATE INDEX IF NOT EXISTS "fki_weightId"
    ON public.goods(weight);


ALTER TABLE IF EXISTS public.questions
    ADD CONSTRAINT "answerId" FOREIGN KEY (answer)
    REFERENCES public.answers (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;
CREATE INDEX IF NOT EXISTS "fki_answerId"
    ON public.questions(answer);


ALTER TABLE IF EXISTS public.questions
    ADD CONSTRAINT "emailId" FOREIGN KEY (email)
    REFERENCES public.email (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;
CREATE INDEX IF NOT EXISTS "fki_emailId"
    ON public.questions(email);


ALTER TABLE IF EXISTS public.questions
    ADD CONSTRAINT "fullNameId" FOREIGN KEY ("fullName")
    REFERENCES public."fullName" (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;
CREATE INDEX IF NOT EXISTS "fki_fullNameId"
    ON public.questions("fullName");


ALTER TABLE IF EXISTS public."questionsGoods"
    ADD CONSTRAINT "goodId" FOREIGN KEY (good)
    REFERENCES public.goods (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;
CREATE INDEX IF NOT EXISTS "fki_goodId"
    ON public."questionsGoods"(good);


ALTER TABLE IF EXISTS public."questionsGoods"
    ADD CONSTRAINT "questionId" FOREIGN KEY (question)
    REFERENCES public.questions (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;
CREATE INDEX IF NOT EXISTS "fki_questionId"
    ON public."questionsGoods"(question);


ALTER TABLE IF EXISTS public."reviewScores"
    ADD CONSTRAINT "reviewId" FOREIGN KEY (review)
    REFERENCES public.reviews (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.reviews
    ADD CONSTRAINT "goodId" FOREIGN KEY (good)
    REFERENCES public.goods (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.reviews
    ADD CONSTRAINT "phoneId" FOREIGN KEY (phone)
    REFERENCES public."phoneNumbers" (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;
CREATE INDEX IF NOT EXISTS "fki_phoneId"
    ON public.reviews(phone);


ALTER TABLE IF EXISTS public."subCategories"
    ADD CONSTRAINT "subCategoryId" FOREIGN KEY (id)
    REFERENCES public."subCategories" (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;
CREATE INDEX IF NOT EXISTS "subCategories_pkey"
    ON public."subCategories"(id);


ALTER TABLE IF EXISTS public."videoReviews"
    ADD CONSTRAINT "reviewTypeId" FOREIGN KEY (type)
    REFERENCES public."reviewType" (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;
CREATE INDEX IF NOT EXISTS "fki_reviewTypeId"
    ON public."videoReviews"(type);


ALTER TABLE IF EXISTS public.weights
    ADD CONSTRAINT "multiplesId" FOREIGN KEY (multiples)
    REFERENCES public.multiples (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;
CREATE INDEX IF NOT EXISTS "fki_multiplesId"
    ON public.weights(multiples);

END;